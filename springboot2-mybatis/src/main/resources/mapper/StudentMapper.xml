<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dckxx.mybatis.mapper.StudentMapper">
    <!-- 定义代码片段 -->
    <sql id="commonParamSql">
        id,name,age,sex,hobby,create_time,update_time
    </sql>

    <resultMap id="studentClassInfo" type="com.dckxx.mybatis.vo.StudentVO">
        <id property="id" column="sid"/>
        <result property="name" column="sname"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="hobby" column="hobby"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <association property="classEntity" javaType="classEntity">
            <id property="id" column="cid" />
            <result property="name" column="className"/>
        </association>
    </resultMap>

    <insert id="addStudent" parameterType="StudentEntity">
        insert into t_student (name,age,sex,hobby,create_time)
        values (
                #{name},
                #{age},
                #{sex},
                #{hobby},
                now()
               )
    </insert>
    <update id="updateStudentById">
        update t_student
        <set>
            <if test="student.name != null">name = #{student.name},</if>
            <if test="student.age != null">age = #{student.age},</if>
            <if test="student.sex != null">sex = #{student.sex},</if>
            <if test="student.hobby != null">hobby = #{student.hobby},</if>
            update_time = now()
        </set>
    </update>
    <delete id="deleteStudentById">
        delete from t_student where id=#{id}
    </delete>
    <select id="queryList" resultType="StudentEntity" parameterType="StudentEntity">
        select *
        from t_student
        where 1=1
        <choose>
            <when test="name != null and name != ''">
                and name like concat('%',#{name},'%')
            </when>
            <when test="age != null">
                and age =#{age}
            </when>
            <otherwise>
                and age <![CDATA[<]]> 30
            </otherwise>
        </choose>
    </select>
    <select id="queryOneById" resultType="com.dckxx.mybatis.entity.StudentEntity">
        <!-- 引入代码片段 -->
        select <include refid="commonParamSql" />
        from t_student
        where id = #{id}
    </select>
    <select id="queryOneByMap" resultType="StudentEntity" parameterType="map">
        select <include refid="commonParamSql" />
        from t_student
        <where>
            <if test="age != null">and age = #{age}</if>
            <if test="startTime != null and endTime != null">
                and create_time between #{startTime} and #{endTime}
            </if>
        </where>
    </select>

    <select id="queryOneByIdReturnMap" resultType="java.util.Map">
        select <include refid="commonParamSql" />
        from t_student
        where id = #{id}
    </select>

    <select id="queryReturnListMap" resultType="java.util.Map">
        select <include refid="commonParamSql" />
        from t_student
    </select>

    <select id="queryStudentInfo" resultMap="studentClassInfo">
        select t1.id cid, t1.name className, s.name sname,s.id sid, s.age, s.sex, s.hobby, s.create_time
        from t_class t1
                 left join t_class_student tcs on t1.id = tcs.class_id
                 left join t_student s on s.id = tcs.student_id
        where 1=1
    </select>

    <insert id="addStudentReturnId" useGeneratedKeys="true" keyProperty="id" parameterType="StudentEntity">
        insert into t_student (name,age,sex,hobby,create_time)
        values (
                   #{name},#{age},#{sex},#{hobby},now()
               )
    </insert>

    <insert id="addStudentSelectKey" parameterType="StudentEntity">
        insert into t_student (name,age,sex,hobby,create_time)
        values (#{name},#{age},#{sex},#{hobby},now());
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select last_insert_id();
        </selectKey>
    </insert>

    <delete id="deleteStudentBatch" parameterType="java.util.Arrays">
        delete from t_student
        where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
